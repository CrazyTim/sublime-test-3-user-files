%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
# See also https://www.sublimetext.com/docs/3/scope_naming.html
name: 'Log'
file_extensions:
  - log
scope: source.log
contexts:
  main:

    # single-quoted string
    - match: ''''
      scope: punctuation.definition.string.begin.log
      push: quoted_string_single

    # double-quoted string
    - match: '"'
      scope: punctuation.definition.string.begin.log
      push: quoted_string_double

    # code block
    - match: '(<code>)|(<sql>)'
      scope: punctuation.definition.string.begin.log
      push: code_block

    # timestamp end
    - match: '(A|P)(?=\])'
      scope: constant.numeric.log # purple

    # numbers
    - match: '\b(-)?[0-9]+\b'
      scope: constant.numeric.log # purple

    # function name
    - match: '(?<=\.)(\w)+(?=(\())'
      scope: variable.function.member.log

    # duration
    - match: '\[(\d|\.)*\](\n|$)'
      scope: keyword.control.log # red

    # warning type
    - match: '\[warn\]'
      scope: invalid.illegal.unknown-escape.c # pink

    # error type
    - match: '^(.*?)\[error](.*)'
      scope: invalid.illegal.unknown-escape.c # pink

    # error unhandled type
    - match: '^(.*?)\[error_u](.*)'
      scope: invalid.illegal.unknown-escape.c # pink

  quoted_string_double:
    - meta_scope: string.quoted.double.log
    - match: '"'
      scope: punctuation.definition.string.end.log
      pop: true

  quoted_string_single:
    - meta_scope: string.quoted.single.log
    - match: ''''
      scope: punctuation.definition.string.end.log
      pop: true

  code_block:
    - meta_scope: string.quoted.double.log
    - match: '(<\/code>)|(<\/sql>)'
      scope: punctuation.definition.string.end.log
      pop: true
